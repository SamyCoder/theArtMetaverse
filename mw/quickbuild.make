#!/bin/bash

# exit on error
set -e

args="$*"

scriptdir="$(dirname $0)"
cd "$scriptdir"
scriptdir="$PWD"

##########################################################
#
# We seek to have a (run in a shell):
#
#    ./configure --prefix=/Path/to/Prefix
#    make
#    make install
#
# software build and installation method via
# this file and the file GNUmakefile.
#
# And other software build and installation methods too.
#
########## NOTES ##########################################
#
# We'd like to keep configuration parameters minimized.
# It seems that the installation prefix is needed,
# but we do wish to keep the program from braking
# if the installed files move.
##########################################################

# A list of all strings that we configure from this script:
shabang=
port=  # HTTP server port
s_port= # HTTPS server port
PREFIX=
jscompress=
csscompress=


# TODO: the default values in this Usage text are not generated
# from the "real" default values in GNUmakefile.


function usage()
{
    local prog="$(basename $0)"

    cat << EOF

  Usage: $prog [OPTIONS]

  Configure the mirror worlds package installation.  The running of this
  script is not required, it's optional.  Run this script if you wish to
  change some of the default configuration parameters.  Parameters will be
  set in the order in which the options that set mhem are given.

  The optional parameter most commonly used is the installation prefix.
  The inexperienced user can unusually ignore all the other options.

  Rerunning this script generates the one file, "quickbuild.make", which is
  loaded by GNUmakefile when GNU make (make) is run.


  ----------------------------------------------------------------------
              OPTIONS
  ----------------------------------------------------------------------


  --no-compress      do not apply yui-compressor to installed installed
                     javascript and CSS files.  The default is compress
                     if yui-compressor is found when this script runs,
                     otherwise not

  --node NPATH       set the full file path to the node.js executable.
                     By default $prog will set the node server script
                     to run with #!/usr/bin/env node , when NPATH is
                     set it will be #!NPATH

  --prefix PREFIX    set the installation directory prefix the current
                     default PREFIX is "installed/" in the current
                     directory.

  --port PORT        set the default HTTP and WebSockets server port
                     to PORT.  The default value is 9999

  --s_port SPORT     set the default HTTPS and secure WebSockets server
                     port to SPORT.  The default value is 4443



  For example in a bash shell run:

     ./configure --prefix=/usr/local/mirrorworlds && make && make install


EOF
    exit 1
}


if which yui-compressor > /dev/null ; then
    # These may get changed via user optional args below.
    echo "Found yui-compressor in your PATH"
    jscompress="yui-compressor --line-break 70 --type js"
    csscompress="yui-compressor --line-break 70 --type css"
fi

# DEVELOPER NOTE:
#
#   Star Date: Sep 2016
# yui-compressor does not work for nodejs code.
# uglifyjs 2.7.3 (the latest at this writing) is broken.


while [ -n "$1" ] ; do
    case "$1" in
        --port)
            shift 1
            port="$1"
            ;;
        --port=*)
            port="${1#*-port=}"
            ;;
        --s_port)
            shift 1
            s_port="$1"
            ;;
        --s_port=*)
            s_port="${1#*-s_port=}"
            ;;
        --prefix)
            shift 1
            PREFIX="$1"
            ;;
        --prefix=*)
            PREFIX="${1#*-prefix=}"
            ;;
        --node)
            shift 1
            shabang="${1}"
            ;;
        --node=*)
            shabang="${1#*-node=}"
            ;;
        --no-compress)
            jscompress=
            csscompress=
            ;;
        *)
            usage
            ;;
    esac
    shift 1
done

val_set=


cat << EOF > quickbuild.make
# This was generated by running:
#   $0 $args
# on $(date)

EOF


# This function indirectly puts a variable into
# the GNUmakefile via the include file quickbuild.make
#
# Usage: setMakeVar MAKE_VARIABLE VALUE
function setMakeVar()
{
    if [ -n "${!2}" ] ; then
        echo "$1 ?= ${!2}" >> quickbuild.make
        echo "$1 = ${!2}"
        val_set=yes
    fi
}


setMakeVar PREFIX PREFIX
setMakeVar JS_COMPRESS jscompress
setMakeVar CSS_COMPRESS csscompress
setMakeVar NODEJS_SHABANG shabang
setMakeVar HTTP_PORT port
setMakeVar HTTPS_PORT s_port

[ -z "$val_set" ] && echo "# No values where set when configure ran" >> quickbuild.make

[ -z "$val_set" ] && cat << EOF

  No configure options where set.
  Using all default configuration values that are set in GNUmakefile.

EOF


cat << EOF

  Generated quickbuild.make

  Now try running:

                     make

EOF

